VideoFile = VideoReader('project_video.mp4');
load('roi_myvariables','c','r');
%-------variables for saving output-----------

Output_Video = VideoWriter('Result');
Output_Video.FrameRate = 25;
open(Output_Video);

%% Take frames One by one by while loop

while hasFrame(VideoFile)
    frame=readFrame(VideoFile);
   %figure('Name','Original Image');imshow(frame);
    frame=imgaussfilt3(frame);
   %figure('Name','Filtered Image');imshow(frame);
    %% Masking the image for White and Yellow Color
    %--------------Define Thresholds for masking White Color---------------
    
    %----------------------Define thresholds for 'Hue'---------------------
    channel1MinW = 200;
    channel1MaxW = 255;
    %------------------Define thresholds for 'Saturation'------------------
    channel2MinW = 200;
    channel2MaxW = 255;
    %---------------------Define thresholds for 'Value'--------------------
    channel3MinW = 200;
    channel3MaxW = 255;
    
    %-----------Create mask based on chosen histogram thresholds-----------
    White=((frame(:,:,1)>=channel1MinW)&(frame(:,:,1)<=channel1MaxW))&...
        (frame(:,:,2)>=channel2MinW)&(frame(:,:,2)<=channel2MaxW)& ...
        (frame(:,:,3)>=channel3MinW)&(frame(:,:,3)<=channel3MaxW);
    
    %figure('Name','White Mask'), imshow(White);
     %--------------Define Thresholds for masking Yellow Color--------------
    
    %----------------------Define thresholds for 'Hue'---------------------
    channel1MinY = 180.000;
    channel1MaxY = 255.000;
    %------------------Define thresholds for 'Saturation'------------------
    channel2MinY = 125.000;
    channel2MaxY = 255;
    %---------------------Define thresholds for 'Value'--------------------
    channel3MinY = 0.000;
    channel3MaxY = 150.000;
    
    %-----------Create mask based on chosen histogram thresholds-----------
    Yellow=((frame(:,:,1)>=channel1MinY)&(frame(:,:,1)<=channel1MaxY))& ...
        (frame(:,:,2)>=channel2MinY)&(frame(:,:,2)<=channel2MaxY)&...
        (frame(:,:,3)>=channel3MinY)&(frame(:,:,3)<=channel3MaxY);
    
     %figure('Name','Yellow Mask'), imshow(Yellow);
     %% Detecting Edges in the image using Canny edge function
     frameW = edge(White,'canny');
     %figure('Name','frameW'),imshow(frameW);
     frameY = edge(Yellow,'canny');
     %figure('Name','frameY'),imshow(frameY);
     %% Neglecting closed edges in smaller areas
     frameY = bwareaopen(frameY,15);
     frameW = bwareaopen(frameW,15);
     %figure('Name','Detecting Edges of Yellow mask'), imshow(frameY);
     %figure('Name','Detecting Edges of White mask'), imshow(frameW);
      %% Deciding ROI Points and Extracting ROI
    
    %--------------Deciding ROI points by plotting it on image-------------
    
     %figure(1)
     %imshow(frame);
     %[r c] = ginput(20);
    
    %---------Extracting Region of Interest from Yellow Edge Frame---------
    
    roiY = roipoly(frameY, r, c);
    [R , C] = size(roiY);
    for i = 1:R
        for j = 1:C
            if roiY(i,j) == 1
                frame_roiY(i,j) = frameY(i,j);
            else
                frame_roiY(i,j) = 0;  
            end
        end
    end  
    
     %figure('Name','Filtering ROI from Yellow mask'), imshow(frame_roiY);
    
    %---------Extracting Region of Interest from White Edge Frame----------
    %figure(1)
    %imshow(frame);
    %[r c] = ginput(20);
    roiW = roipoly(frameW, r, c);
    [R , C] = size(roiW);
    for i = 1:R
        for j = 1:C
            if roiW(i,j) == 1
                frame_roiW(i,j) = frameW(i,j);
            else
                frame_roiW(i,j) = 0;  
            end
        end
    end  
    
     %figure('Name','Filtering ROI from White mask'), imshow(frame_roiW);
     %% Applying hough Transform to get straight Lines
     %-----Appplying Hough Transform to white and yellow Frames-----
     [H_Y,theta_Y,rho_Y] = hough(frame_roiY);
     [H_W,theta_W,rho_W] = hough(frame_roiW);
     %-----Extracting Hough Peaks from Hough Transform of frames-----
     P_Y = houghpeaks(H_Y,2,'threshold',2);
     P_W = houghpeaks(H_W,2,'threshold',2);
     
    %------Extracting Lines From Detected Hough Peaks------
    
    lines_Y = houghlines(frame_roiY,theta_Y,rho_Y,P_Y,'FillGap',100,'Minlength',40);
    
%    figure('Name','Hough Lines in Image');imshow(frame);hold on 
%    for k = 1:length(lines_Y)
%        xy = [lines_Y(k).point1;lines_Y(k).point2];
%        plot(xy(:,1),xy(:,2),'LineWidth',1,'Color','black');
       % plot beginning and end points
%        plot(xy(1,1),xy(1,2),'s','LineWidth',1,'Color','blue');
%        plot(xy(2,1),xy(2,2),'s','LineWidth',1,'Color','red');
%    end
    
    lines_W = houghlines(frame_roiW,theta_W,rho_W,P_W,'FillGap',100,'Minlength',40);
    
%    for k = 1:length(lines_W)
%        xy = [lines_W(k).point1;lines_W(k).point2];
%        plot(xy(:,1),xy(:,2),'LineWidth',1,'Color','black');
%        %plot begining and end points
%        plot(xy(1,1),xy(1,2),'s','LineWidth',1,'Color','blue');
%        plot(xy(2,1),xy(2,2),'s','LineWidth',1,'Color','red')
%    end
%    hold off
    %% Plotting best fitting lines  after Extrapolation
    % Extracting Starting and End point of lines
    LlineY = [lines_Y(1).point1;lines_Y(1).point2];
    RlineY = [lines_Y(2).point1;lines_Y(2).point2];
    
    RlineW = [lines_W(1).point1;lines_W(1).point2];
    LlineW = [lines_W(2).point1;lines_W(2).point2];
    
    %Calculate slope of left and right lines
    LslopeY = (LlineY(2,2)-LlineY(1,2))/(LlineY(2,1)-LlineY(1,1));
    RslopeW = (RlineW(2,2)-RlineW(1,2))/(RlineW(2,1)-RlineW(1,1));
    %Make equation of left and right lines to extrapolate them
    xleftY = 1; 
    yleftY = LslopeY * (xleftY - LlineY(1,1)) + LlineY(1,2);
    xrightY = 550;
    yrightY = LslopeY * (xrightY - LlineY(2,1)) + LlineY(2,2);
    
    xleftW = 750;
    yleftW = RslopeW * (xleftW - RlineW(1,1)) + RlineW(1,2);
    xrightW = 1300;
    yrightW = RslopeW * (xrightW - RlineW(2,1)) + RlineW(2,2);
    
    %------Making transparent trapezoid between 4 points of two lines-----
    points = [xleftY yleftY; xrightY yrightY; xleftW yleftW; xrightW yrightW];
    number = [1 2 3 4];
    
    %% Plotting everything on Image
    figure('Name','Final Output');
    imshow(frame);
    hold on
    plot([xleftY,xrightY],[yleftY,yrightY],'LineWidth',6,'Color','green');
    plot([xleftW,xrightW],[yleftW,yrightW],'LineWidth',6,'Color','green');
    patch('Faces',number,'Vertices',points,'FaceColor','red','Edgecolor','red','FaceAlpha',0.4);
    hold off
   %-----------save frame to output file--------------
    writeVideo(Output_Video,getframe);
end

%---------------------Closing Save Video File Variable---------------------
close(Output_Video)
